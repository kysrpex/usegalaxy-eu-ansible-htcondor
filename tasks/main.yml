---
- name: Check for existing HTCondor installation
  ansible.builtin.shell: /usr/bin/condor_version | head -n 1 | cut -d ' ' -f2
  register: condor_installed_version

- name: Print HTCondor version
  ansible.builtin.debug:
    var: condor_installed_version.stdout

- name: Condor install
  block:

    - name: Install without role
      ansible.builtin.shell: curl -fsSL https://get.htcondor.org | sudo /bin/bash -s -- --no-dry-run
      when: (condor_installed_version.stdout <= condor_minimal_version) and not \
       (condor_role == 'submit' or condor_role == 'execute' or condor_role == 'central_manager')

    - name: Install with role
      ansible.builtin.shell: |
        curl -fsSL https://get.htcondor.org | \
        sudo GET_HTCONDOR_PASSWORD={{ condor_password }} \
        /bin/bash -s -- --no-dry-run --{{ condor_role }} {{ condor_host }}
      when: (condor_installed_version.stdout <= condor_minimal_version) and \
       (condor_role == 'submit' or condor_role == 'execute' or condor_role == 'central_manager')


- name: Require local config
  lineinfile:
    dest: /etc/condor/condor_config
    line: 'REQUIRE_LOCAL_CONFIG_FILE = true'
    regexp: '^ *REQUIRE_LOCAL_CONFIG_FILE.*'
  notify: reload condor

- name: Copy local config
  ansible.builtin.template:
    src: condor_config.j2
    dest: /etc/condor/condor_config.local
    owner: root
    group: root
    mode: 0644
  notify: reload condor
  when: condor_copy_template | bool

- name: condor walltime script
  ansible.builtin.copy:
    dest: /etc/condor/meta_walltime.py
    src: meta_walltime.py
    mode: 0755
  notify: reload condor

- name: enable and stop condor
  ansible.builtin.service:
    name: condor
    enabled: true
    state: stopped
  when: not condor_copy_template | bool

- name: enable and start condor
  ansible.builtin.service:
    name: condor
    enabled: true
    state: started
  when: condor_copy_template | bool
